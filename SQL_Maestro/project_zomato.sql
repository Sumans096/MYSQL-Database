CREATE DATABASE PROJ_ZOMATO;
USE PROJ_ZOMATO;


CREATE TABLE GOLDUSERS_SIGNUP
( USER_ID INT, GOLD_SIGNUP_DATE DATE);

INSERT INTO GOLDUSERS_SIGNUP
VALUES(1,'09-22-2017'),(3,'04-21-2017');


CREATE TABLE PRODUCT
(PRODUCT_ID INT, PRODUCT_NAME TEXT, PRICE INT);

INSERT INTO PRODUCT
VALUES(1,'p1',980),(2,'p2',870), (3,'p3',330);

CREATE TABLE USERS
(USER_ID INT, SIGN_UP_DATE DATE);

INSERT INTO USERS
VALUES(1,'09-02-2014'), (2,'01-15-2015'), (3,'04-11-2014');

CREATE TABLE SALES
(USER_ID INT, CREATED_DATE DATE, PRODUCT_ID INT);

INSERT INTO SALES
VALUES(1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);




SELECT * FROM SALES;
SELECT * FROM PRODUCT;
SELECT * FROM GOLDUSERS_SIGNUP;
SELECT * FROM USERS;


-- 1- what is the total amount each customer spent on zomato?

SELECT A.USER_ID, SUM(B.PRICE) Total_Amt_spent FROM SALES A
INNER JOIN 
PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID 
GROUP BY A.USER_ID;

-- 2- how many days each customer visited on zomato? 

SELECT USER_ID, COUNT(DISTINCT CREATED_DATE) FROM SALES GROUP BY USER_ID;

-- 3- what was the first product purchased by each customer of zomato?

SELECT * FROM
(SELECT *, RANK() OVER ( PARTITION BY USER_ID ORDER BY CREATED_DATE ) RANK FROM SALES) 
A WHERE RANK = 1;

-- 4- what is the most purchase item on the menu ?
    
SELECT TOP 2 PRODUCT_ID FROM SALES
GROUP BY PRODUCT_ID
ORDER BY COUNT(PRODUCT_ID) DESC;

-- 5- how many times that most selling item purchased by all customers?

SELECT * FROM SALES
WHERE PRODUCT_ID = 
(SELECT TOP 1 PRODUCT_ID FROM SALES 
GROUP BY PRODUCT_ID
ORDER BY COUNT(PRODUCT_ID) DESC);

-- 6- which user_id purchased top most selling product?

SELECT USER_ID, COUNT(PRODUCT_ID) P_CNT FROM SALES
WHERE PRODUCT_ID = 
(SELECT TOP 1 PRODUCT_ID FROM SALES
GROUP BY PRODUCT_ID
ORDER BY COUNT(PRODUCT_ID) DESC)
GROUP BY USER_ID;


-- 7- which item was most popular for each customer?

SELECT * FROM
(SELECT *, RANK() OVER (PARTITION BY USER_ID 
ORDER BY PURCHASE_CNT DESC) RNK FROM
(SELECT USER_ID,PRODUCT_ID, COUNT(PRODUCT_ID) PURCHASE_CNT FROM SALES   
GROUP BY USER_ID, PRODUCT_ID) A)B 

WHERE RNK = 2;


-- 8. which item was purchased first by the customer after they became a member?

SELECT * FROM
(SELECT C.*, RANK() OVER (PARTITION BY USER_ID ORDER BY CREATED_DATE) AS RNK FROM 
(SELECT A.USER_ID, A.CREATED_DATE, A.PRODUCT_ID, B.GOLD_SIGNUP_DATE FROM SALES A
INNER JOIN GOLDUSERS_SIGNUP B
ON A.USER_ID = B.USER_ID
WHERE CREATED_DATE >= GOLD_SIGNUP_DATE) C)D WHERE RNK = 1 ;


-- 9. Which item was purchased just before customer becaming a gold member ?

SELECT * FROM 
(SELECT C.* , RANK() OVER (PARTITION BY USER_ID ORDER BY CREATED_DATE) AS RNK FROM
(SELECT A.USER_ID, A.CREATED_DATE, A.PRODUCT_ID, B.GOLD_SIGNUP_DATE FROM SALES A
INNER JOIN GOLDUSERS_SIGNUP B
ON A.USER_ID = B.USER_ID
WHERE CREATED_DATE <= GOLD_SIGNUP_DATE) C) D WHERE RNK = 1;


-- 10. What is the total orders and amount spent for each member before they became a member?

SELECT USER_ID, COUNT(CREATED_DATE), SUM(PRICE) AS TOTAL_AMT_SPENT FROM 
(SELECT C.*, D.PRICE FROM 
(SELECT A.USER_ID, A.CREATED_DATE, A.PRODUCT_ID, B.GOLD_SIGNUP_DATE FROM SALES A
INNER JOIN GOLDUSERS_SIGNUP B
ON A.USER_ID = B.USER_ID
WHERE CREATED_DATE <= GOLD_SIGNUP_DATE ) C 
INNER JOIN PRODUCT D 
ON C.PRODUCT_ID = D.PRODUCT_ID) E
GROUP BY USER_ID;


 /* 11. 1.  If buying each product generate points for eg 5 rs = 2 zomato point and each
       product has different purchaseing points for eg for prod 1 5 rs = 1 zomato 
	   point, for prod2 10 rs = 5 zomato point and prod3  5rs =1 zomato point.
	    
	   2.Calcualate the points collected by each customers and 
	   3. for which most points have been given till now .  */




SELECT E.* , T_PRICE/POINT AS TOTAL_POINTS FROM 
(SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5 WHEN PRODUCT_ID = 2 THEN 2 
WHEN PRODUCT_ID = 3 THEN 5 ELSE 0 END AS POINT FROM
(SELECT C.USER_ID, C.PRODUCT_ID, SUM(PRICE) AS T_PRICE FROM
(SELECT A.*, B.PRICE FROM SALES A
INNER JOIN PRODUCT B
ON A.PRODUCT_ID = B.PRODUCT_ID) C
GROUP BY USER_ID, PRODUCT_ID) D) E ;



SELECT USER_ID, SUM(TOTAL_POINTS)*2.5 AS TOTAL_MONEY_EARNED FROM
(SELECT E.* , T_PRICE/POINT AS TOTAL_POINTS FROM 
(SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5 WHEN PRODUCT_ID = 2 THEN 2 
WHEN PRODUCT_ID = 3 THEN 5 ELSE 0 END AS POINT FROM
(SELECT C.USER_ID, C.PRODUCT_ID, SUM(PRICE) AS T_PRICE FROM
(SELECT A.*, B.PRICE FROM SALES A
INNER JOIN PRODUCT B
ON A.PRODUCT_ID = B.PRODUCT_ID) C
GROUP BY USER_ID, PRODUCT_ID) D) E) F
GROUP BY USER_ID;



SELECT * FROM
(SELECT G.*, RANK() OVER (ORDER BY TOTAL_POINT_EARNED DESC) AS RNK FROM
(SELECT PRODUCT_ID , SUM(TOTAL_POINTS) AS TOTAL_POINT_EARNED FROM  
(SELECT E.* , T_PRICE/POINT AS TOTAL_POINTS FROM 
(SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5 WHEN PRODUCT_ID = 2 THEN 2 
WHEN PRODUCT_ID = 3 THEN 5 ELSE 0 END AS POINT FROM
(SELECT C.USER_ID, C.PRODUCT_ID, SUM(PRICE) AS T_PRICE FROM
(SELECT A.*, B.PRICE FROM SALES A
INNER JOIN PRODUCT B
ON A.PRODUCT_ID = B.PRODUCT_ID) C
GROUP BY USER_ID, PRODUCT_ID) D) E)F
GROUP BY PRODUCT_ID)G)H
WHERE RNK = 1 ;



/* 12. 1) In the first one year after a customer joins the gold program(including their
join date) irrespective of what the customer has purchased they earn 5 zomato points 
for every 10 rs spent who earned more 1 or 3 and what was their earnings in their 
first yr? 

2) 1 zomato point = 2 rs*/


SELECT A.USER_ID, A.CREATED_DATE, A.PRODUCT_ID, B.GOLD_SIGNUP_DATE FROM SALES A
INNER JOIN GOLDUSERS_SIGNUP B
ON A.USER_ID = B.USER_ID
/* To get the earning for 1 yr from now we can't simply add the day to get
    the date simply. like as done below 
    
WHERE CREATED_DATE >= GOLD_SIGNUP_DATE AND CREATED_DATE <= GOLD_SIGNUP_DATE+365  */ 

WHERE CREATED_DATE >= GOLD_SIGNUP_DATE AND CREATED_DATE <= DATEADD(YEAR, 1, GOLD_SIGNUP_DATE);


SELECT C.*, D.PRICE FROM 
(SELECT A.USER_ID, A.CREATED_DATE, A.PRODUCT_ID, B.GOLD_SIGNUP_DATE FROM SALES A
INNER JOIN GOLDUSERS_SIGNUP B
ON A.USER_ID = B.USER_ID
WHERE CREATED_DATE >= GOLD_SIGNUP_DATE 
AND 
CREATED_DATE <= DATEADD(YEAR, 1, GOLD_SIGNUP_DATE))C
INNER JOIN PRODUCT D 
ON C.PRODUCT_ID = D.PRODUCT_ID;


-- 0.5 ZOMATO POINT = 1 RS

SELECT C.*, D.PRICE*0.5 FROM 
(SELECT A.USER_ID, A.CREATED_DATE, A.PRODUCT_ID, B.GOLD_SIGNUP_DATE FROM SALES A
INNER JOIN GOLDUSERS_SIGNUP B
ON A.USER_ID = B.USER_ID
WHERE CREATED_DATE >= GOLD_SIGNUP_DATE 
AND 
CREATED_DATE <= DATEADD(YEAR, 1, GOLD_SIGNUP_DATE))C
INNER JOIN PRODUCT D 
ON C.PRODUCT_ID = D.PRODUCT_ID;



/* 13. Rank all the transaction of the customers */


SELECT *, RANK() OVER(PARTITION BY USER_ID ORDER BY CREATED_DATE) AS RNK FROM SALES;


/* 14. Rank all the transaction for each number whenever they are a zomato number for 
       every non gold number transaction mark as NA */


SELECT E.*, CASE WHEN RNK = 0 THEN 'NA' else RNK END AS RNKK FROM
(SELECT C.*, CAST((CASE WHEN GOLD_SIGNUP_DATE IS NULL THEN 0 
ELSE RANK() OVER (PARTITION BY USER_ID ORDER BY CREATED_DATE DESC ) END) AS VARCHAR)
AS RNK FROM 

(SELECT A.USER_ID, A.CREATED_DATE, A.PRODUCT_ID, B.GOLD_SIGNUP_DATE FROM SALES A
LEFT JOIN GOLDUSERS_SIGNUP B
ON A.USER_ID = B.USER_ID
AND CREATED_DATE >= GOLD_SIGNUP_DATE ) C)E;


